import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import "@mantine/core/styles.css";
import { Providers } from "./components/Providers";
import styles from "./layout.module.css";
import { TreeProvider } from "./context/TreeContext";
import { Header } from "./components/Header";
import { DynamicEditorProvider } from "@/app/components/DynamicEditorProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  sidebar: React.ReactNode;
}

export default function RootLayout({ children, sidebar }: RootLayoutProps) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <Providers>
          <TreeProvider>
            <DynamicEditorProvider>
              <div className={styles.container}>
                <div className={styles.sidebar}>{sidebar}</div>
                <main className={styles.main}>
                  <Header />
                  {children}
                </main>
              </div>
            </DynamicEditorProvider>
          </TreeProvider>
        </Providers>
      </body>
    </html>
  );
}
